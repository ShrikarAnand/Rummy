class comp_sort():
    def __init__(self,rsort):
        self.rsort = rsort
    def type_sort(self):
        l1 = []
        l2 = []
        l3 = []
        l4 = []
        for t in self.rsort:
            if t[1] == '♠':
                l1.insert(0,t)
        for t in self.rsort:
            if t[1] == '♦':
                l2.insert(0,t)
        for t in self.rsort:
            if t[1] == '♥':
                l3.insert(0,t)
        for t in self.rsort:
            if t[1] == '♣':
                l4.insert(0,t)
        order = {'A': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9, '10': 10, 'J': 11, 'Q': 12,
                 'K': 13}
        for t in l1:
            for i in range(0,l1.index(t)):
                if order[t[0]] < order[l1[i][0]]:
                    l1.pop(l1.index(t))
                    l1.insert(i,t)
                if len(l1) >= 3:
                    if order[t[0]] < order[l1[i-1][0]] and order[t[0]] < order[l1[i+1][0]] and i-1 >= 0:
                        l1.pop(l1.index(t))
                        l1.insert(i-1,t)
                    if len(l1) == 3:
                        if order[l1[0][0]] < order[l1[1][0]] and order[l1[1][0]] < order[l1[2][0]]:
                            break
                    elif len(l1) == 4:
                        if order[l1[0][0]] < order[l1[1][0]] and order[l1[1][0]] < order[l1[2][0]] and order[l1[2][0]] < order[l1[3][0]]:
                            break
                    elif len(l1) == 5:
                        if order[l1[0][0]] < order[l1[1][0]] and order[l1[1][0]] < order[l1[2][0]] and order[l1[2][0]] < order[l1[3][0]] and order[l1[3][0]] < order[l1[4][0]]:
                            break
                    elif len(l1) == 6:
                        if order[l1[0][0]] < order[l1[1][0]] and order[l1[1][0]] < order[l1[2][0]] and order[l1[2][0]] < order[l1[3][0]] and order[l1[3][0]] < order[l1[4][0]]  and order[l1[4][0]] < order[l1[5][0]]:
                            break
                    elif len(l1) == 7:
                        if order[l1[0][0]] < order[l1[1][0]] and order[l1[1][0]] < order[l1[2][0]] and order[l1[2][0]] < order[l1[3][0]] and order[l1[3][0]] < order[l1[4][0]]  and order[l1[4][0]] < order[l1[5][0]] and order[l1[5][0]] < order[l1[6][0]]:
                            break
                    elif len(l1) == 8:
                        if order[l1[0][0]] < order[l1[1][0]] and order[l1[1][0]] < order[l1[2][0]] and order[l1[2][0]] < order[l1[3][0]] and order[l1[3][0]] < order[l1[4][0]]  and order[l1[4][0]] < order[l1[5][0]] and order[l1[5][0]] < order[l1[6][0]] and order[l1[6][0]] < order[l1[7][0]]:
                            break
                    elif len(l1) == 9:
                        if order[l1[0][0]] < order[l1[1][0]] and order[l1[1][0]] < order[l1[2][0]] and order[l1[2][0]] < order[l1[3][0]] and order[l1[3][0]] < order[l1[4][0]]  and order[l1[4][0]] < order[l1[5][0]] and order[l1[5][0]] < order[l1[6][0]] and order[l1[6][0]] < order[l1[7][0]] and order[l1[7][0]] < order[l1[8][0]]:
                            break
                    elif len(l1) == 10:
                        if order[l1[0][0]] < order[l1[1][0]] and order[l1[1][0]] < order[l1[2][0]] and order[l1[2][0]] < order[l1[3][0]] and order[l1[3][0]] < order[l1[4][0]]  and order[l1[4][0]] < order[l1[5][0]] and order[l1[5][0]] < order[l1[6][0]] and order[l1[6][0]] < order[l1[7][0]] and order[l1[7][0]] < order[l1[8][0]] and order[l1[8][0]] < order[l1[9][0]]:
                            break
        check_list_1 = [t[0] for t in l1]
        if 'Q' in check_list_1 and 'K' in check_list_1 and 'A' in check_list_1 and ('2' not in check_list_1 or '3' not in check_list_1):
            l1.pop(0)
            l1.insert(len(l1),('A','♠'))
        for t in l2:
            for i in range(0,l2.index(t)):
                if order[t[0]] < order[l2[i][0]]:
                    l2.pop(l2.index(t))
                    l2.insert(i,t)
                if len(l2) >= 3:
                    if order[t[0]] < order[l2[i-1][0]] and order[t[0]] < order[l2[i+1][0]] and i-1 >= 0:
                        l2.pop(l2.index(t))
                        l2.insert(i-1,t)
                    if len(l2) == 3:
                        if order[l2[0][0]] < order[l2[1][0]] and order[l2[1][0]] < order[l2[2][0]]:
                            break
                    elif len(l2) == 4:
                        if order[l2[0][0]] < order[l2[1][0]] and order[l2[1][0]] < order[l2[2][0]] and order[l2[2][0]] < \
                                order[l2[3][0]]:
                            break
                    elif len(l2) == 5:
                        if order[l2[0][0]] < order[l2[1][0]] and order[l2[1][0]] < order[l2[2][0]] and order[l2[2][0]] < \
                                order[l2[3][0]] and order[l2[3][0]] < order[l2[4][0]]:
                            break
                    elif len(l2) == 6:
                        if order[l2[0][0]] < order[l2[1][0]] and order[l2[1][0]] < order[l2[2][0]] and order[l2[2][0]] < \
                                order[l2[3][0]] and order[l2[3][0]] < order[l2[4][0]] and order[l2[4][0]] < order[
                            l2[5][0]]:
                            break
                    elif len(l2) == 7:
                        if order[l2[0][0]] < order[l2[1][0]] and order[l2[1][0]] < order[l2[2][0]] and order[l2[2][0]] < \
                                order[l2[3][0]] and order[l2[3][0]] < order[l2[4][0]] and order[l2[4][0]] < order[
                            l2[5][0]] and order[l2[5][0]] < order[l2[6][0]]:
                            break
                    elif len(l2) == 8:
                        if order[l2[0][0]] < order[l2[1][0]] and order[l2[1][0]] < order[l2[2][0]] and order[l2[2][0]] < \
                                order[l2[3][0]] and order[l2[3][0]] < order[l2[4][0]] and order[l2[4][0]] < order[
                            l2[5][0]] and order[l2[5][0]] < order[l2[6][0]] and order[l2[6][0]] < order[l2[7][0]]:
                            break
                    elif len(l2) == 9:
                        if order[l2[0][0]] < order[l2[1][0]] and order[l2[1][0]] < order[l2[2][0]] and order[l2[2][0]] < \
                                order[l2[3][0]] and order[l2[3][0]] < order[l2[4][0]] and order[l2[4][0]] < order[
                            l2[5][0]] and order[l2[5][0]] < order[l2[6][0]] and order[l2[6][0]] < order[l2[7][0]] and \
                                order[l2[7][0]] < order[l2[8][0]]:
                            break
                    elif len(l2) == 10:
                        if order[l2[0][0]] < order[l2[1][0]] and order[l2[1][0]] < order[l2[2][0]] and order[l2[2][0]] < \
                                order[l2[3][0]] and order[l2[3][0]] < order[l2[4][0]] and order[l2[4][0]] < order[
                            l2[5][0]] and order[l2[5][0]] < order[l2[6][0]] and order[l2[6][0]] < order[l2[7][0]] and \
                                order[l2[7][0]] < order[l2[8][0]] and order[l2[8][0]] < order[l2[9][0]]:
                            break
        check_list_2 = [t[0] for t in l2]
        if 'Q' in check_list_2 and 'K' in check_list_2 and 'A' in check_list_2 and (
                '2' not in check_list_2 or '3' not in check_list_2):
            l2.pop(0)
            l2.insert(len(l2), ('A', '♦'))
        for t in l3:
            for i in range(0,l3.index(t)):
                if order[t[0]] < order[l3[i][0]]:
                    l3.pop(l3.index(t))
                    l3.insert(i,t)
                if len(l3) >= 3:
                    if order[t[0]] < order[l3[i-1][0]] and order[t[0]] < order[l3[i+1][0]] and i-1 >= 0:
                        l3.pop(l3.index(t))
                        l3.insert(i-1,t)
                    if len(l3) == 3:
                        if order[l3[0][0]] < order[l3[1][0]] and order[l3[1][0]] < order[l3[2][0]]:
                            break
                    elif len(l3) == 4:
                        if order[l3[0][0]] < order[l3[1][0]] and order[l3[1][0]] < order[l3[2][0]] and order[l3[2][0]] < \
                                order[l3[3][0]]:
                            break
                    elif len(l3) == 5:
                        if order[l3[0][0]] < order[l3[1][0]] and order[l3[1][0]] < order[l3[2][0]] and order[l3[2][0]] < \
                                order[l3[3][0]] and order[l3[3][0]] < order[l3[4][0]]:
                            break
                    elif len(l3) == 6:
                        if order[l3[0][0]] < order[l3[1][0]] and order[l3[1][0]] < order[l3[2][0]] and order[l3[2][0]] < \
                                order[l3[3][0]] and order[l3[3][0]] < order[l3[4][0]] and order[l3[4][0]] < order[
                            l3[5][0]]:
                            break
                    elif len(l3) == 7:
                        if order[l3[0][0]] < order[l3[1][0]] and order[l3[1][0]] < order[l3[2][0]] and order[l3[2][0]] < \
                                order[l3[3][0]] and order[l3[3][0]] < order[l3[4][0]] and order[l3[4][0]] < order[
                            l3[5][0]] and order[l3[5][0]] < order[l3[6][0]]:
                            break
                    elif len(l3) == 8:
                        if order[l3[0][0]] < order[l3[1][0]] and order[l3[1][0]] < order[l3[2][0]] and order[l3[2][0]] < \
                                order[l3[3][0]] and order[l3[3][0]] < order[l3[4][0]] and order[l3[4][0]] < order[
                            l3[5][0]] and order[l3[5][0]] < order[l3[6][0]] and order[l3[6][0]] < order[l3[7][0]]:
                            break
                    elif len(l3) == 9:
                        if order[l3[0][0]] < order[l3[1][0]] and order[l3[1][0]] < order[l3[2][0]] and order[l3[2][0]] < \
                                order[l3[3][0]] and order[l3[3][0]] < order[l3[4][0]] and order[l3[4][0]] < order[
                            l3[5][0]] and order[l3[5][0]] < order[l3[6][0]] and order[l3[6][0]] < order[l3[7][0]] and \
                                order[l3[7][0]] < order[l3[8][0]]:
                            break
                    elif len(l3) == 10:
                        if order[l3[0][0]] < order[l3[1][0]] and order[l3[1][0]] < order[l3[2][0]] and order[l3[2][0]] < \
                                order[l3[3][0]] and order[l3[3][0]] < order[l3[4][0]] and order[l3[4][0]] < order[
                            l3[5][0]] and order[l3[5][0]] < order[l3[6][0]] and order[l3[6][0]] < order[l3[7][0]] and \
                                order[l3[7][0]] < order[l3[8][0]] and order[l3[8][0]] < order[l3[9][0]]:
                            break
        check_list_3 = [t[0] for t in l3]
        if 'Q' in check_list_3 and 'K' in check_list_3 and 'A' in check_list_3 and (
                '2' not in check_list_3 or '3' not in check_list_3):
            l3.pop(0)
            l3.insert(len(l3), ('A', '♥'))
        for t in l4:
            for i in range(0,l4.index(t)):
                if order[t[0]] < order[l4[i][0]]:
                    l4.pop(l4.index(t))
                    l4.insert(i,t)
                if len(l4) >= 3:
                    if order[t[0]] < order[l4[i-1][0]] and order[t[0]] < order[l4[i+1][0]] and i-1 >= 0:
                        l4.pop(l4.index(t))
                        l4.insert(i-1,t)
                    if len(l4) == 3:
                        if order[l4[0][0]] < order[l4[1][0]] and order[l4[1][0]] < order[l4[2][0]]:
                            break
                    elif len(l4) == 4:
                        if order[l4[0][0]] < order[l4[1][0]] and order[l4[1][0]] < order[l4[2][0]] and order[l4[2][0]] < \
                                order[l4[3][0]]:
                            break
                    elif len(l4) == 5:
                        if order[l4[0][0]] < order[l4[1][0]] and order[l4[1][0]] < order[l4[2][0]] and order[l4[2][0]] < \
                                order[l4[3][0]] and order[l4[3][0]] < order[l4[4][0]]:
                            break
                    elif len(l4) == 6:
                        if order[l4[0][0]] < order[l4[1][0]] and order[l4[1][0]] < order[l4[2][0]] and order[l4[2][0]] < \
                                order[l4[3][0]] and order[l4[3][0]] < order[l4[4][0]] and order[l4[4][0]] < order[
                            l4[5][0]]:
                            break
                    elif len(l4) == 7:
                        if order[l4[0][0]] < order[l4[1][0]] and order[l4[1][0]] < order[l4[2][0]] and order[l4[2][0]] < \
                                order[l4[3][0]] and order[l4[3][0]] < order[l4[4][0]] and order[l4[4][0]] < order[
                            l4[5][0]] and order[l4[5][0]] < order[l4[6][0]]:
                            break
                    elif len(l4) == 8:
                        if order[l4[0][0]] < order[l4[1][0]] and order[l4[1][0]] < order[l4[2][0]] and order[l4[2][0]] < \
                                order[l4[3][0]] and order[l4[3][0]] < order[l4[4][0]] and order[l4[4][0]] < order[
                            l4[5][0]] and order[l4[5][0]] < order[l4[6][0]] and order[l4[6][0]] < order[l4[7][0]]:
                            break
                    elif len(l4) == 9:
                        if order[l4[0][0]] < order[l4[1][0]] and order[l4[1][0]] < order[l4[2][0]] and order[l4[2][0]] < \
                                order[l4[3][0]] and order[l4[3][0]] < order[l4[4][0]] and order[l4[4][0]] < order[
                            l4[5][0]] and order[l4[5][0]] < order[l4[6][0]] and order[l4[6][0]] < order[l4[7][0]] and \
                                order[l4[7][0]] < order[l4[8][0]]:
                            break
                    elif len(l4) == 10:
                        if order[l4[0][0]] < order[l4[1][0]] and order[l4[1][0]] < order[l4[2][0]] and order[l4[2][0]] < \
                                order[l4[3][0]] and order[l4[3][0]] < order[l4[4][0]] and order[l4[4][0]] < order[
                            l4[5][0]] and order[l4[5][0]] < order[l4[6][0]] and order[l4[6][0]] < order[l4[7][0]] and \
                                order[l4[7][0]] < order[l4[8][0]] and order[l4[8][0]] < order[l4[9][0]]:
                            break
        check_list_4 = [t[0] for t in l4]
        if 'Q' in check_list_4 and 'K' in check_list_4 and 'A' in check_list_4 and (
                '2' not in check_list_4 or '3' not in check_list_4):
            l4.pop(0)
            l4.insert(len(l4), ('A', '♣'))
        final_list =[]
        final_list += l1
        final_list += l2
        final_list += l3
        final_list += l4
        return final_list
def set_count(playerlist):
    order = {'A': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9, '10': 10, 'J': 11, 'Q': 12,
                 'K': 13}
    cardslist=playerlist.copy()
    cardslist1=comp_sort(playerlist)
    cardsorted=cardslist1.type_sort()
    sets=0
    s=[]
    s1=[]
    for card in cardslist:
        for acard in cardslist:
            for bcard in cardslist:
                if card[0]==acard[0]==bcard[0] and card[1]!=acard[1]!=bcard[1]!=card[1]:
                    cardslist.remove(card)
                    cardslist.remove(bcard)
                    cardslist.remove(acard)
                    s.append(card)
                    s.append(bcard)
                    s.append(acard)
    for x in s:
        s1.append(x[0])
    for x1 in s1:
        if s1.count(x1)==3:
            s1.remove(x1)
            sets+=1
    L1=[]
    L2=[]
    L3=[]
    L4=[]
    ls=[]
    for x in cardsorted:
        if x[1]=='♠':
            L1.append(x)
        elif x[1]=='♦':
            L2.append(x)
        elif x[1]=='♥':
            L3.append(x)
        elif x[1]=='♣':
            L4.append(x)
    for x in L1:
        for y in L1:
            for z in L1:
                if order[x[0]]==order[y[0]]-1==order[z[0]]-2:
                    ls.append(x)
                    ls.append(y)
                    ls.append(z)
                    L1.remove(x)
                    L1.remove(y)
                    L1.remove(z)
    for x in L2:
        for y in L2:
            for z in L2:
                if order[x[0]]==order[y[0]]-1==order[z[0]]-2:
                    ls.append(x)
                    ls.append(y)
                    ls.append(z)
                    L2.remove(x)
                    L2.remove(y)
                    L2.remove(z)


    for x in L1:
        for y in L1:
            for z in L1:
                if order[x[0]]==order[y[0]]-1==order[z[0]]-2:
                    ls.append(x)
                    ls.append(y)
                    ls.append(z)
                    L1.remove(x)
                    L1.remove(y)
                    L1.remove(z)    

    for x in L1:
        for y in L1:
            for z in L1:
                if order[x[0]]==order[y[0]]-1==order[z[0]]-2:
                    ls.append(x)
                    ls.append(y)
                    ls.append(z)
                    L1.remove(x)
                    L1.remove(y)
                    L1.remove(z)

    if len(ls)==3:
        sets+=1
    elif len(ls)==6:
        sets+=2
    elif len(ls)==9:
        sets+=3
    elif len(ls)==12:
        sets+=4
    elif len(ls)==15:
        sets+=5
    return sets
