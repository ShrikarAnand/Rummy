class comp_sort():
    def __init__(self,rsort):
        self.rsort = rsort
    def type_sort(self):
        '''for t in self.rsort:
            if t[1] == '♠':
                self.rsort.remove(t)
                self.rsort.insert(0,t)
        for t in self.rsort:
            if t[1] == '♦':
                self.rsort.remove(t)
                self.rsort.insert(0,t)
        for t in self.rsort:
            if t[1] == '♥':
                self.rsort.remove(t)
                self.rsort.insert(0,t)
        order = {1:'A',2:'2',3:'3',4:'4',5:'5',6:'6',7:'7',8:'8',9:'9',10:'10',11:'J',12:'Q',13:'K'}'''
        l1 = []
        l2 = []
        l3 = []
        l4 = []
        for t in self.rsort:
            if t[1] == '♠':
                l1.insert(0,t)
        for t in self.rsort:
            if t[1] == '♦':
                l2.insert(0,t)
        for t in self.rsort:
            if t[1] == '♥':
                l3.insert(0,t)
        for t in self.rsort:
            if t[1] == '♣':
                l4.insert(0,t)
        order = {'A': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9, '10': 10, 'J': 11, 'Q': 12,
                 'K': 13}
        for t in l1:
            for i in range(0,l1.index(t)):
                if order[t[0]] > order[l1[i][0]]:
                    l1.pop(l1.index(t))
                    l1.insert(i,t)
                    l1.reverse()
        if len(l1) == 2 or len(l1) == 4:
            l1.insert(2, l1[-1])
            l1.pop(-1)
        elif len(l1) == 3:
            l1.insert(1,l1[-1])
            l1.pop(-1)
        print(l1)
        for t in l2:
            for i in range(0,l2.index(t)):
                if order[t[0]] > order[l2[i][0]]:
                    l2.pop(l2.index(t))
                    l2.insert(i,t)
                    l2.reverse()
        if len(l2) == 2 or len(l2) == 4:
            l2.insert(2, l2[-1])
            l2.pop(-1)
        elif len(l2) == 3:
            l2.insert(1, l2[-1])
            l2.pop(-1)
        print(l2)
        for t in l3:
            for i in range(0,l3.index(t)):
                if order[t[0]] > order[l3[i][0]]:
                    l3.pop(l3.index(t))
                    l3.insert(i,t)
                    l3.reverse()
        if len(l3) == 2 or len(l3) == 4:
            l3.insert(2, l3[-1])
            l3.pop(-1)
        elif len(l3) == 3:
            l3.insert(1, l3[-1])
            l3.pop(-1)
        print(l3)
        for t in l4:
            for i in range(0,l4.index(t)):
                if order[t[0]] > order[l4[i][0]]:
                    l4.pop(l4.index(t))
                    l4.insert(i,t)
                    l4.reverse()
        if len(l4) == 2 or len(l4) == 4:
            l4.insert(2, l4[-1])
            l4.pop(-1)
        elif len(l4) == 3:
            l4.insert(1, l4[-1])
            l4.pop(-1)
        print(l4)
        return '''l1,l2,l3,l4'''

a = comp_sort([('J', '♣'), ('4', '♠'), ('10', '♠'), ('J', '♠'), ('8', '♥'), ('9', '♣'), ('3', '♥'), ('3', '♠'), ('10', '♦'), ('6', '♥')])
print(a.type_sort())
